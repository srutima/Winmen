 1. **Database Schema Design:** - Create tables for customers, orders, products, and order_items. - customers table to include fields: customer_id, first_name, last_name, email. - orders table to include fields: order_id, customer_id, order_date. - products table to include fields: product_id, product_name, price. - order_items table to include fields: order_id, product_id, quantity. 
2. **SQL Query Tasks:** - Write SQL queries to accomplish the following tasks: - Calculate the total number of orders placed. - Determine the total revenue generated from all orders. - Identify the top-selling products based on the quantity sold. - Find the customer with the highest total spending. - Retrieve the customers who have not placed any orders. - Calculate the average order value.
3. **Transactional Data Handling:** - Implement transactions to ensure data integrity when handling multiple SQL operations. - Utilize JOIN operations to retrieve data from related tables. - Apply aggregate functions such as COUNT, SUM, AVG to analyze transactional data effectively.
4. **Subqueries and Data Aggregation:** - Use subqueries to extract specific data subsets or perform complex filtering conditions. - Combine subqueries with aggregate functions for advanced data analysis.
5. **Testing and Documentation:** - Populate the tables with sample data for testing query accuracy. - Document the database schema, query rationale, and any assumptions made during the design process. By successfully completing these requirements, you will demonstrate proficiency in working with transactional data, utilizing aggregate functions for analysis, and leveraging subqueries for advanced query operations within a relational database environment. This project will serve as a practical assessment of your ability to extract valuable insights from transactional datasets using SQL queries.
